# This is a sample build configuration for Other.
# Check our guides at https://confluence.atlassian.com/x/5Q4SMw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: php:7.2-fpm

pipelines:
  branches:
    pipeline-ssh:
    - step:
        name: Develop 
        caches:
          - composer
        script:
          - apt-get update && apt-get install -y unzip openssh-client libmcrypt-dev   libpq-dev postgresql-client nodejs npm
          - docker-php-ext-install pdo pdo_pgsql
          - cp .env.pipeline .env
          
          - npm install
          - npm run dev
        artifacts:
          - storage/**
          - vendor/**
          - public/**
          - .env 
        services:
          - postgres   
    - parallel:
        - step:
            name: artisan      
            script:
              - psql -U "postgres" -h "localhost"  -p 5432 -c "CREATE DATABASE test_crm"
              - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
              - composer install
              - php artisan key:generate
              - php artisan view:clear
              - php artisan cache:clear
              - php artisan migrate
              - php artisan passport:install
        #- step:
        #    name: npm package         
        #    script:
        #      - npm install
        #      - npm run dev
          #- ./vendor/bin/phpunit
        - step:  
            name: Deploying
            script:
              - mkdir -p ~/.ssh
              - cat my_known_hosts >> ~/.ssh/known_hosts
              - (umask  077 ; echo $mykey1 | base64 --decode > ~/.ssh/id_rsa)
              - ssh swoole@ninepinetechnology-tmcrjvwbpr.dynamic-m.com -p 9912 '. compile.sh'
        

definitions:
      services:
        postgres:
            image: postgres
            environment:
                POSTGRES_USER: 'postgres'
                POSTGRES_PASSWORD: 'testuser'
                POSTGRES_DB: 'test'
